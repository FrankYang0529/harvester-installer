resources:
# create the cattle-monitoring-system namespace and SA upfront, so that kubevirt monitoring-operator integration can find it
- apiVersion: v1
  kind: Namespace
  metadata:
    name: cattle-monitoring-system
- apiVersion: v1
  kind: Namespace
  metadata:
    name: cattle-logging-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      meta.helm.sh/release-name: rancher-monitoring
      meta.helm.sh/release-namespace: cattle-monitoring-system
    labels:
      app: rancher-monitoring-operator
      app.kubernetes.io/component: prometheus-operator
      app.kubernetes.io/instance: rancher-monitoring
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: rancher-monitoring-prometheus-operator
      heritage: Helm
      release: rancher-monitoring
    name: rancher-monitoring-operator
    namespace: cattle-monitoring-system
- apiVersion: helm.cattle.io/v1
  kind: HelmChartConfig
  metadata:
    name: rke2-ingress-nginx
    namespace: kube-system
  spec:
    valuesContent: |-
      controller:
        config:
          proxy-body-size: "0"
          proxy-request-buffering: "off"
        admissionWebhooks:
          port: 8444
        publishService:
          pathOverride: kube-system/ingress-expose
        extraArgs:
          default-ssl-certificate: cattle-system/tls-rancher-internal
- apiVersion: v1
  kind: Secret
  metadata:
    name: tls-ingress
    namespace: cattle-system
  type: Opaque
  data:
    tls.crt: Cg==
    tls.key: Cg==
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    name: rancher-expose
    namespace: cattle-system
  spec:
    rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: rancher
              port:
                number: 80
# TODO: use HelmChart to install fleet and fleet-crd after removing rancher
# - apiVersion: helm.cattle.io/v1
#   kind: HelmChart
#   metadata:
#     name: fleet-crd
#     namespace: cattle-system
#   spec:
#     chart: fleet-crd
#     version: {{ .FleetChartVersion }}
#     repo: http://harvester-cluster-repo.cattle-system.svc/charts
# - apiVersion: helm.cattle.io/v1
#   kind: HelmChart
#   metadata:
#     name: fleet
#     namespace: cattle-system
#   spec:
#     chart: fleet
#     version: {{ .FleetChartVersion }}
#     createNamespace: true
#     targetNamespace: cattle-system
#     repo: http://harvester-cluster-repo.cattle-system.svc/charts
- apiVersion: helm.cattle.io/v1
  kind: HelmChart
  metadata:
    name: system-upgrade-controller
    namespace: kube-system
  spec:
    chart: system-upgrade-controller
    version: {{ .SystemUpgradeControllerChartVersion }}
    createNamespace: true
    targetNamespace: cattle-system
    repo: http://harvester-cluster-repo.cattle-system.svc/charts
    valuesContent: |-
      global:
        cattle:
          psp:
            enabled: false
# - apiVersion: fleet.cattle.io/v1alpha1
#   kind: Bundle
#   metadata:
#     name: harvester
#     namespace: cattle-system
#   spec:
#     defaultNamespace: harvester-system
#     diff:
#       comparePatches:
#       - apiVersion: storage.k8s.io/v1
#         jsonPointers:
#         - /metadata/annotations
#         kind: StorageClass
#         name: harvester-longhorn
#       - apiVersion: apiextensions.k8s.io/v1
#         jsonPointers:
#         - /status/acceptedNames
#         - /status/conditions
#         - /status/storedVersions
#         kind: CustomResourceDefinition
#         name: engineimages.longhorn.io
#       - apiVersion: apiextensions.k8s.io/v1
#         jsonPointers:
#         - /status/acceptedNames
#         - /status/conditions
#         - /status/storedVersions
#         kind: CustomResourceDefinition
#         name: nodes.longhorn.io
#       - apiVersion: apiextensions.k8s.io/v1
#         jsonPointers:
#         - /status/acceptedNames
#         - /status/conditions
#         - /status/storedVersions
#         kind: CustomResourceDefinition
#         name: volumes.longhorn.io
#       - apiVersion: apiextensions.k8s.io/v1
#         jsonPointers:
#         - /status/acceptedNames
#         - /status/conditions
#         - /status/storedVersions
#         kind: CustomResourceDefinition
#         name: settings.longhorn.io
#       - apiVersion: apiextensions.k8s.io/v1
#         jsonPointers:
#         - /status/acceptedNames
#         - /status/conditions
#         - /status/storedVersions
#         kind: CustomResourceDefinition
#         name: replicas.longhorn.io
#       - apiVersion: apiextensions.k8s.io/v1
#         jsonPointers:
#         - /status/acceptedNames
#         - /status/conditions
#         - /status/storedVersions
#         kind: CustomResourceDefinition
#         name: instancemanagers.longhorn.io
#       - apiVersion: apiextensions.k8s.io/v1
#         jsonPointers:
#         - /status/acceptedNames
#         - /status/conditions
#         - /status/storedVersions
#         kind: CustomResourceDefinition
#         name: engines.longhorn.io
#     helm:
#       releaseName: harvester
#       repo: http://harvester-cluster-repo.cattle-system.svc/charts
#       version: 1.3.1
#       values:
#         containers:
#           apiserver:
#             hciMode: true
#             image:
#               imagePullPolicy: IfNotPresent
#         harvester-load-balancer:
#           enabled: true
#         harvester-network-controller:
#           enabled: true
#           image:
#             pullPolicy: IfNotPresent
#           vipEnabled: true
#         harvester-node-disk-manager:
#           enabled: true
#           image:
#             pullPolicy: IfNotPresent
#           labelFilter:
#           - COS_*
#           - HARV_*
#         kube-vip:
#           enabled: true
#         kube-vip-cloud-provider:
#           enabled: true
#         kubevirt:
#           spec:
#             monitorAccount: rancher-monitoring-operator
#             monitorNamespace: cattle-monitoring-system
#         longhorn:
#           defaultSettings:
#             defaultDataPath: /var/lib/harvester/defaultdisk
#             taintToleration: kubevirt.io/drain:NoSchedule
#           enabled: true
#         multus:
#           enabled: false
#         rancherEmbedded: true
#         replicas: 2
#         service:
#           vip:
#             enabled: true
#             hwAddress: 02:00:00:03:3D:61
#             ip: 192.168.3.131
#             mode: dhcp
#         webhook:
#           image:
#             imagePullPolicy: IfNotPresent
#           replicas: 2
- apiVersion: helm.cattle.io/v1
  kind: HelmChart
  metadata:
    name: harvester
    namespace: kube-system
  spec:
    chart: harvester
    version: {{ .HarvesterChartVersion }}
    createNamespace: true
    targetNamespace: harvester-system
    repo: http://harvester-cluster-repo.cattle-system.svc/charts
    valuesContent: |-
      {{- if .Vip }}
      service:
        vip:
          enabled: true
          mode: "{{ .VipMode }}"
          ip: "{{ .Vip }}"
          hwAddress: "{{ .VipHwAddr }}"
      {{- end }}
      {{- if .Harvester.StorageClass.ReplicaCount }}
      storageClass:
        replicaCount: {{ .Harvester.StorageClass.ReplicaCount }}
      {{- end }}
      {{- if .Harvester.EnableGoCoverDir }}
      enableGoCoverDir: true
      {{- end }}
      kubevirt:
        spec:
          monitorAccount: rancher-monitoring-operator
          monitorNamespace: cattle-monitoring-system
      containers:
        apiserver:
          image:
            imagePullPolicy: "IfNotPresent"
          hciMode: true
      multus:
        enabled: false
      longhorn:
        enabled: true
        defaultSettings:
          taintToleration: "kubevirt.io/drain:NoSchedule"
          defaultDataPath: "/var/lib/harvester/defaultdisk"
          {{- if .Harvester.Longhorn.DefaultSettings.GuaranteedInstanceManagerCPU }}
          guaranteedInstanceManagerCPU: {{ .Harvester.Longhorn.DefaultSettings.GuaranteedInstanceManagerCPU }}
          {{- end }}
      harvester-network-controller:
        enabled: true
        vipEnabled: true
        image:
          pullPolicy: "IfNotPresent"
      harvester-node-disk-manager:
        enabled: true
        image:
          pullPolicy: "IfNotPresent"
        labelFilter:
          - "COS_*"
          - "HARV_*"
      rancherEmbedded: true
      webhook:
        image:
          imagePullPolicy: "IfNotPresent"
      harvester-load-balancer:
        enabled: true
      kube-vip:
        enabled: true
      kube-vip-cloud-provider:
        enabled: true
- apiVersion: helm.cattle.io/v1
  kind: HelmChart
  metadata:
    name: harvester-crd
    namespace: kube-system
  spec:
    chart: harvester-crd
    version: {{ .HarvesterChartVersion }}
    createNamespace: true
    targetNamespace: harvester-system
    repo: http://harvester-cluster-repo.cattle-system.svc/charts
